{"ast":null,"code":"import shop from'../api/shop';import*as types from'../constants/ActionTypes';const receiveProducts=products=>({type:types.RECEIVE_PRODUCTS,products});export const getAllProducts=()=>dispatch=>{shop.getProducts(products=>{dispatch(receiveProducts(products));});};const addToCartUnsafe=productId=>({type:types.ADD_TO_CART,productId});export const addToCart=productId=>(dispatch,getState)=>{if(getState().products.byId[productId].inventory>0){dispatch(addToCartUnsafe(productId));}};export const checkout=products=>(dispatch,getState)=>{const _getState=getState(),cart=_getState.cart;dispatch({type:types.CHECKOUT_REQUEST});shop.buyProducts(products,()=>{dispatch({type:types.CHECKOUT_SUCCESS,cart});// Replace the line above with line below to rollback on failure:\n// dispatch({ type: types.CHECKOUT_FAILURE, cart })\n});};","map":{"version":3,"sources":["/Users/mac/devops-projects/redux/examples/shopping-cart/src/actions/index.js"],"names":["shop","types","receiveProducts","products","type","RECEIVE_PRODUCTS","getAllProducts","dispatch","getProducts","addToCartUnsafe","productId","ADD_TO_CART","addToCart","getState","byId","inventory","checkout","cart","CHECKOUT_REQUEST","buyProducts","CHECKOUT_SUCCESS"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,0BAAvB,CAEA,KAAMC,CAAAA,eAAe,CAAGC,QAAQ,GAAK,CACnCC,IAAI,CAAEH,KAAK,CAACI,gBADuB,CAEnCF,QAFmC,CAAL,CAAhC,CAKA,MAAO,MAAMG,CAAAA,cAAc,CAAG,IAAMC,QAAQ,EAAI,CAC9CP,IAAI,CAACQ,WAAL,CAAiBL,QAAQ,EAAI,CAC3BI,QAAQ,CAACL,eAAe,CAACC,QAAD,CAAhB,CAAR,CACD,CAFD,EAGD,CAJM,CAMP,KAAMM,CAAAA,eAAe,CAAGC,SAAS,GAAK,CACpCN,IAAI,CAAEH,KAAK,CAACU,WADwB,CAEpCD,SAFoC,CAAL,CAAjC,CAKA,MAAO,MAAME,CAAAA,SAAS,CAAGF,SAAS,EAAI,CAACH,QAAD,CAAWM,QAAX,GAAwB,CAC5D,GAAIA,QAAQ,GAAGV,QAAX,CAAoBW,IAApB,CAAyBJ,SAAzB,EAAoCK,SAApC,CAAgD,CAApD,CAAuD,CACrDR,QAAQ,CAACE,eAAe,CAACC,SAAD,CAAhB,CAAR,CACD,CACF,CAJM,CAMP,MAAO,MAAMM,CAAAA,QAAQ,CAAGb,QAAQ,EAAI,CAACI,QAAD,CAAWM,QAAX,GAAwB,iBACzCA,QAAQ,EADiC,CAClDI,IADkD,WAClDA,IADkD,CAG1DV,QAAQ,CAAC,CACPH,IAAI,CAAEH,KAAK,CAACiB,gBADL,CAAD,CAAR,CAGAlB,IAAI,CAACmB,WAAL,CAAiBhB,QAAjB,CAA2B,IAAM,CAC/BI,QAAQ,CAAC,CACPH,IAAI,CAAEH,KAAK,CAACmB,gBADL,CAEPH,IAFO,CAAD,CAAR,CAIA;AACA;AACD,CAPD,EAQD,CAdM","sourcesContent":["import shop from '../api/shop'\nimport * as types from '../constants/ActionTypes'\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n})\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products))\n  })\n}\n\nconst addToCartUnsafe = productId => ({\n  type: types.ADD_TO_CART,\n  productId\n})\n\nexport const addToCart = productId => (dispatch, getState) => {\n  if (getState().products.byId[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId))\n  }\n}\n\nexport const checkout = products => (dispatch, getState) => {\n  const { cart } = getState()\n\n  dispatch({\n    type: types.CHECKOUT_REQUEST\n  })\n  shop.buyProducts(products, () => {\n    dispatch({\n      type: types.CHECKOUT_SUCCESS,\n      cart\n    })\n    // Replace the line above with line below to rollback on failure:\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\n  })\n}\n"]},"metadata":{},"sourceType":"module"}