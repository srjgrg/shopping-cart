{"ast":null,"code":"import shop from '../api/shop';\nimport * as types from '../constants/ActionTypes';\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n});\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products));\n  });\n};\n\nconst addToCartUnsafe = productId => ({\n  type: types.ADD_TO_CART,\n  productId\n});\n\nexport const addToCart = productId => (dispatch, getState) => {\n  if (getState().products.byId[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId));\n  }\n};\nexport const checkout = products => (dispatch, getState) => {\n  const _getState = getState(),\n        cart = _getState.cart;\n\n  dispatch({\n    type: types.CHECKOUT_REQUEST\n  });\n  shop.buyProducts(products, () => {\n    dispatch({\n      type: types.CHECKOUT_SUCCESS,\n      cart\n    }); // Replace the line above with line below to rollback on failure:\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\n  });\n};","map":{"version":3,"sources":["/Users/mac/devops-projects/shopping-carts/src/actions/index.js"],"names":["shop","types","receiveProducts","products","type","RECEIVE_PRODUCTS","getAllProducts","dispatch","getProducts","addToCartUnsafe","productId","ADD_TO_CART","addToCart","getState","byId","inventory","checkout","cart","CHECKOUT_REQUEST","buyProducts","CHECKOUT_SUCCESS"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,0BAAvB;;AAEA,MAAMC,eAAe,GAAGC,QAAQ,KAAK;AACnCC,EAAAA,IAAI,EAAEH,KAAK,CAACI,gBADuB;AAEnCF,EAAAA;AAFmC,CAAL,CAAhC;;AAKA,OAAO,MAAMG,cAAc,GAAG,MAAMC,QAAQ,IAAI;AAC9CP,EAAAA,IAAI,CAACQ,WAAL,CAAiBL,QAAQ,IAAI;AAC3BI,IAAAA,QAAQ,CAACL,eAAe,CAACC,QAAD,CAAhB,CAAR;AACD,GAFD;AAGD,CAJM;;AAMP,MAAMM,eAAe,GAAGC,SAAS,KAAK;AACpCN,EAAAA,IAAI,EAAEH,KAAK,CAACU,WADwB;AAEpCD,EAAAA;AAFoC,CAAL,CAAjC;;AAKA,OAAO,MAAME,SAAS,GAAGF,SAAS,IAAI,CAACH,QAAD,EAAWM,QAAX,KAAwB;AAC5D,MAAIA,QAAQ,GAAGV,QAAX,CAAoBW,IAApB,CAAyBJ,SAAzB,EAAoCK,SAApC,GAAgD,CAApD,EAAuD;AACrDR,IAAAA,QAAQ,CAACE,eAAe,CAACC,SAAD,CAAhB,CAAR;AACD;AACF,CAJM;AAMP,OAAO,MAAMM,QAAQ,GAAGb,QAAQ,IAAI,CAACI,QAAD,EAAWM,QAAX,KAAwB;AAAA,oBACzCA,QAAQ,EADiC;AAAA,QAClDI,IADkD,aAClDA,IADkD;;AAG1DV,EAAAA,QAAQ,CAAC;AACPH,IAAAA,IAAI,EAAEH,KAAK,CAACiB;AADL,GAAD,CAAR;AAGAlB,EAAAA,IAAI,CAACmB,WAAL,CAAiBhB,QAAjB,EAA2B,MAAM;AAC/BI,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAEH,KAAK,CAACmB,gBADL;AAEPH,MAAAA;AAFO,KAAD,CAAR,CAD+B,CAK/B;AACA;AACD,GAPD;AAQD,CAdM","sourcesContent":["import shop from '../api/shop'\nimport * as types from '../constants/ActionTypes'\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n})\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products))\n  })\n}\n\nconst addToCartUnsafe = productId => ({\n  type: types.ADD_TO_CART,\n  productId\n})\n\nexport const addToCart = productId => (dispatch, getState) => {\n  if (getState().products.byId[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId))\n  }\n}\n\nexport const checkout = products => (dispatch, getState) => {\n  const { cart } = getState()\n\n  dispatch({\n    type: types.CHECKOUT_REQUEST\n  })\n  shop.buyProducts(products, () => {\n    dispatch({\n      type: types.CHECKOUT_SUCCESS,\n      cart\n    })\n    // Replace the line above with line below to rollback on failure:\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\n  })\n}\n"]},"metadata":{},"sourceType":"module"}