{"ast":null,"code":"import React from'react';import{render}from'react-dom';import{createStore,applyMiddleware}from'redux';import{Provider}from'react-redux';import{createLogger}from'redux-logger';import thunk from'redux-thunk';import reducer from'./reducers';import{getAllProducts}from'./actions';import App from'./containers/App';const middleware=[thunk];if(process.env.NODE_ENV!=='production'){middleware.push(createLogger());}const store=createStore(reducer,applyMiddleware(...middleware));store.dispatch(getAllProducts());render(React.createElement(Provider,{store:store},React.createElement(App,null)),document.getElementById('root'));","map":{"version":3,"sources":["/Users/mac/devops-projects/shopping-carts/src/index.js"],"names":["React","render","createStore","applyMiddleware","Provider","createLogger","thunk","reducer","getAllProducts","App","middleware","process","env","NODE_ENV","push","store","dispatch","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CAEA,KAAMC,CAAAA,UAAU,CAAG,CAAEJ,KAAF,CAAnB,CACA,GAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzCH,UAAU,CAACI,IAAX,CAAgBT,YAAY,EAA5B,EACD,CAED,KAAMU,CAAAA,KAAK,CAAGb,WAAW,CACvBK,OADuB,CAEvBJ,eAAe,CAAC,GAAGO,UAAJ,CAFQ,CAAzB,CAKAK,KAAK,CAACC,QAAN,CAAeR,cAAc,EAA7B,EAEAP,MAAM,CACJ,oBAAC,QAAD,EAAU,KAAK,CAAEc,KAAjB,EACE,oBAAC,GAAD,MADF,CADI,CAIJE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJI,CAAN","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport { getAllProducts } from './actions'\nimport App from './containers/App'\n\nconst middleware = [ thunk ];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware)\n)\n\nstore.dispatch(getAllProducts())\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}