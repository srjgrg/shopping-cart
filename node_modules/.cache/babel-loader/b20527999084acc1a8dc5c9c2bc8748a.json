{"ast":null,"code":"import _objectSpread from \"/Users/mac/devops-projects/redux/examples/shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes';\n\nconst products = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return _objectSpread({}, state, {\n        inventory: state.inventory - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return _objectSpread({}, state, {}, action.products.reduce((obj, product) => {\n        obj[product.id] = product;\n        return obj;\n      }, {}));\n\n    default:\n      const productId = action.productId;\n\n      if (productId) {\n        return _objectSpread({}, state, {\n          [productId]: products(state[productId], action)\n        });\n      }\n\n      return state;\n  }\n};\n\nconst visibleIds = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(product => product.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  byId,\n  visibleIds\n});\nexport const getProduct = (state, id) => state.byId[id];\nexport const getVisibleProducts = state => state.visibleIds.map(id => getProduct(state, id));","map":{"version":3,"sources":["/Users/mac/devops-projects/redux/examples/shopping-cart/src/reducers/products.js"],"names":["combineReducers","RECEIVE_PRODUCTS","ADD_TO_CART","products","state","action","type","inventory","byId","reduce","obj","product","id","productId","visibleIds","map","getProduct","getVisibleProducts"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,0BAA9C;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,WAAL;AACE,+BACKE,KADL;AAEEG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,GAAkB;AAF/B;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAYA,MAAMI,IAAI,GAAG,CAACJ,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,gBAAL;AACE,+BACKG,KADL,MAEKC,MAAM,CAACF,QAAP,CAAgBM,MAAhB,CAAuB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC1CD,QAAAA,GAAG,CAACC,OAAO,CAACC,EAAT,CAAH,GAAkBD,OAAlB;AACA,eAAOD,GAAP;AACD,OAHE,EAGA,EAHA,CAFL;;AAOF;AAAA,YACUG,SADV,GACwBR,MADxB,CACUQ,SADV;;AAEE,UAAIA,SAAJ,EAAe;AACb,iCACKT,KADL;AAEE,WAACS,SAAD,GAAaV,QAAQ,CAACC,KAAK,CAACS,SAAD,CAAN,EAAmBR,MAAnB;AAFvB;AAID;;AACD,aAAOD,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,MAAMU,UAAU,GAAG,CAACV,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,gBAAL;AACE,aAAOI,MAAM,CAACF,QAAP,CAAgBY,GAAhB,CAAoBJ,OAAO,IAAIA,OAAO,CAACC,EAAvC,CAAP;;AACF;AACE,aAAOR,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeJ,eAAe,CAAC;AAC7BQ,EAAAA,IAD6B;AAE7BM,EAAAA;AAF6B,CAAD,CAA9B;AAKA,OAAO,MAAME,UAAU,GAAG,CAACZ,KAAD,EAAQQ,EAAR,KACxBR,KAAK,CAACI,IAAN,CAAWI,EAAX,CADK;AAGP,OAAO,MAAMK,kBAAkB,GAAGb,KAAK,IACrCA,KAAK,CAACU,UAAN,CAAiBC,GAAjB,CAAqBH,EAAE,IAAII,UAAU,CAACZ,KAAD,EAAQQ,EAAR,CAArC,CADK","sourcesContent":["import { combineReducers } from 'redux'\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes'\n\nconst products = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        inventory: state.inventory - 1\n      }\n    default:\n      return state\n  }\n}\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return {\n        ...state,\n        ...action.products.reduce((obj, product) => {\n          obj[product.id] = product\n          return obj\n        }, {})\n      }\n    default:\n      const { productId } = action\n      if (productId) {\n        return {\n          ...state,\n          [productId]: products(state[productId], action)\n        }\n      }\n      return state\n  }\n}\n\nconst visibleIds = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(product => product.id)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  byId,\n  visibleIds\n})\n\nexport const getProduct = (state, id) =>\n  state.byId[id]\n\nexport const getVisibleProducts = state =>\n  state.visibleIds.map(id => getProduct(state, id))\n"]},"metadata":{},"sourceType":"module"}